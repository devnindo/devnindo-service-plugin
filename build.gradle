plugins
{
    id 'idea'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.2.1'
}

group  "io.devnindo.plugin"
version  '0.9.40'
sourceCompatibility = JavaVersion.VERSION_17

pluginBundle {
    website = 'https://devnindo.io'
    vcsUrl = 'https://github.com/devnindo/devnindo-service-plugin.git'
    tags = ['data-helper', 'data-generator', 'devnindo']
}

gradlePlugin {
  plugins {
    devnindoPlugin {
      id = "io.devnindo.devnindo-service-plugin"
      implementationClass = "io.devnindo.serviceplugin.PluginMain"
      displayName = 'Plugin for generating data class'
      description = 'A plugin that generate io.devnindo.core:devnindo-datatype data class'
    }
  }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

apply from: 'remote-repo.gradle'

dependencies {
    implementation 'com.thoughtworks.qdox:qdox:2.0.0'
    implementation 'com.google.dagger:dagger:2.42'
    implementation 'com.squareup:javapoet:1.11.1'
    implementation('io.devnindo.core:service-common:0.9.1'){changing = true}
    implementation('io.devnindo.core:type-common:0.9.5')
    implementation 'org.junit.jupiter:junit-jupiter:5.9.0'
}

task publishPlugin(type: GradleBuild) {
    tasks = [
            'clean',
            'test',
            'build',
            'generateMetadataFileForPluginMavenPublication',
            'publishPluginMavenPublicationToMavenRepository',
            'publish'
    ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
}

test {
  useJUnitPlatform()
  // maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
  testLogging {
    events "passed", "skipped", "failed"
    showStandardStreams true
  }
}